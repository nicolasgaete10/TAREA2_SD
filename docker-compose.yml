version: "3.8"

services:
  # Base de datos para almacenamiento persistente
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: yahoo_respuestas
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Sistema de caché en memoria
  redis:
    image: redis:6-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Servicio de almacenamiento 
  almacenamiento:
    build: ./almacenamiento
    container_name: almacenamiento
    environment:
      - DATABASE_URL=postgresql://user:password@postgres_db:5432/yahoo_respuestas
    ports:
      - "5005:5005"
    depends_on:
      - postgres

  # Servicio de cálculo de score y LLM 
  score_service:
    build: ./score_service
    container_name: score_service
    environment:
      - GEMINI_API_KEY=${Clave_GEMINI_API_KEY}
      - DATASET_PATH=/app/Data/test.csv
      - STORAGE_SERVICE_URL=http://almacenamiento:5005/save
    volumes:
      - ./Data:/app/Data
    ports:
      - "5001:5001"
    depends_on:
      - almacenamiento

  cache_fifo:
    build: ./cache_service
    container_name: cache_fifo
    command: ["python", "cache_FIFO.py"]
    environment:
      - REDIS_URL=redis://redis_cache:6379
      - SCORE_SERVICE_URL=http://score_service:5001/process
    ports:
      - "5000:5000"
    depends_on:
      - redis

  cache_lru:
    build: ./cache_service
    container_name: cache_lru
    command: ["python", "cache_lru.py"]
    environment:
      - REDIS_URL=redis://redis_cache:6379
      - SCORE_SERVICE_URL=http://score_service:5001/process
    ports:
      - "5002:5002"
    depends_on:
      - redis

  # Generador de tráfico
  traffic_generator:
    build: ./traffic_generator
    container_name: traffic_generator
    environment:
      - CACHE_SERVICE_URL=${CACHE_SERVICE_URL:-http://cache_fifo:5000/check}
      - DATASET_PATH=/app/Data/test.csv
    volumes:
      - ./Data:/app/Data
    depends_on:
      - cache_fifo
    restart: on-failure

volumes:
  postgres_data: